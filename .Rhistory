md
x <- 3
x
x <- c(17, 14, 4, 5, 13, 12, 10)
y <- x[x>=10] <-4
y
z <- x[x>10] <-4
z
a <- x[x>10] == 4
a
b <- x[x.4] <- 10
b <- x[x > 4] <- 10
b
source('~/maleVector.R')
source('~/maleVector.R')
makeVector(1:1000)
makeVector(c(1:1000))
source('~/maleVector.R')
x <- 1:10000
makeVector(x)
vec <- makeVector(x)
vec$getMean()
vec <- makeVector(x)
vec
vec$getmean()
mx <- mean(x)
vec$setmean(mx)
vec$getmean()
vec
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
make check
make check-all
getwd()
x <- 1
print(x)
x
a <- c(1,2,3,4,5)
b <- c(1:5)
a=b
print(a=b)
msg <- "hello"
msg
a <- b
a
b
a-b
a+b
a=b-a
a+b-a
y <- c(T,2)
class(Y)
class(y)
y <- c("a", F)
class(y)
x <- c(1,2,3,4,5)
class(x)
y <- as.logical(x)
y
x <- c(0,1,2,3,4,5)
y <- as.logical(x)
y
class(y)
z <- as.character(x)
z
class(x)
class(z)
x <- c("a","b")
as.numeric(x)
as.logical(x)
subject_name <- c("john_doe", "jane dae", "Steve Graves")
temprature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
temprature[2]
temprature[2:3]
temprature[-2]
temprature[flu_status]
rattle()
data(iris)
str(iris)
iris[2]
str(iris)
iris[2,]
ls()
databases()
plot(iris)
library(A3)
install.packages("Rcmdr")
library("Rcmdr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:Rcmdr", unload=TRUE)
x<-c(3,4,5,8)
y<-c(1,3)
z<-x+y
z
a<-seq(1:100)
a
a <- 1:100
1
a
a <- seq(1,100,2)
a
e<-rep("X",10)
e
a<-rep(1,6)
a
c<-rep(1:6,2)
c
c<-rep(1:6,1:6)
c
x<-rep(c(4,7,1,5),c(3,2,5,2))
x
a<-c(8,7,9,2)
b<-order(a)
b
a<-c(1,2,3)
b<-c(4,5,6)
c<-data.frame(rbind(a,b))
c
d<- data.frame(c(1:3), c(4:6))
d
library(arules)
install("arules")
install.packages("arules")
library(arules)
groceries <- read.transactions("groceries.csv", sep = ",")
setwd("~/R/Module 5")
groceries <- read.transactions("groceries.csv", sep = ",")
groceries
groceries <- read.csv("groceries.csv", sep = ",")
groceries
groceries <- read.transactions("groceries.csv", sep = ",")
summary(groceries)
inspect(groceries[1:5])
itemFrequency(groceries[, 1:3])
itemFrequency(groceries[, ])
itemFrequency(groceries[, 1:3])
itemFrequencyPlot(groceries, support = 0.1)
itemFrequencyPlot(groceries, support = 0.5)
itemFrequencyPlot(groceries, support = 0.5)
itemFrequencyPlot(groceries, support = 0.1)
itemFrequencyPlot(groceries, support = 0.2)
itemFrequencyPlot(groceries, support = 0.1)
itemFrequencyPlot(groceries, support = 0.05)
itemFrequencyPlot(groceries, support = 0.05)
itemFrequencyPlot(groceries, topN = 20)
itemFrequencyPlot(groceries, topN = 20)
image(groceries[1:5])
image(groceries[1:7])
image(groceries[1:10])
image(sample(groceries, 100))
library(arules)
apriori(groceries)
groceryrules <- apriori(groceries, parameter = list(support =
0.006, confidence = 0.25, minlen = 2))
groceryrules
summary(groceryrules)
inspect(groceryrules[1:3])
inspect(sort(groceryrules, by = "lift")[1:5])
berryrules <- subset(groceryrules, items %in% "berries")
inspect(berryrules)
